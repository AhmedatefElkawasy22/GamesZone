@model GamesZone.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
    var returnUrl = ViewData["ReturnUrl"] as string ?? "/";
}

<h1 class="mb-4">Login</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <form asp-action="Login" class="shadow p-4 rounded bg-light">
            <div asp-validation-summary="All" class="text-danger mb-3"></div>
            <input type="hidden" name="ReturnUrl" value="@returnUrl" />
            <div class="form-group mb-3">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" type="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group mb-3 d-flex justify-content-between align-items-center">
                <div class="form-check">
                    <input class="form-check-input" asp-for="RememberMe" />
                    <label class="form-check-label" asp-for="RememberMe">@Html.DisplayNameFor(model => model.RememberMe)</label>
                </div>
                <a asp-action="Registration" class="btn btn-link p-0">Don't have an account?</a>
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="Login" class="btn btn-primary w-100" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
